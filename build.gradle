plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.github.davidmc24.gradle.plugin.avro" version "1.3.0"
}

group = 'az.company'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url= uri("https://packages.confluent.io/maven")
    }
}

generateAvroJava {
    source("${projectDir}/src/main/resources/avro")//sourcepath avrofile
}

jar {
    enabled = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    implementation "org.apache.avro:avro:${avroVersion}"
    implementation "io.confluent:kafka-avro-serializer:6.0.0"
    implementation 'io.confluent:kafka-schema-registry-client:6.0.1'
    implementation "org.apache.avro:avro-maven-plugin:${avroMavenPluginVersion}"
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
